<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:head>
    <title>User Management</title>
    <style type="text/css">
        body {
            font-family: Arial, sans-serif;
            background-color: #f2f2f2;
            margin: 0;
            padding: 0;
        }

        .header {
            background: linear-gradient(90deg, #5a026b, #2c0136);
            padding: 9px;
            color: white;
            text-align: center;
        }

        .container {
            max-width: 1600px;
            margin: 40px auto;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .search {
            text-align: center;
            font-weight: bold;
            padding-top: 20px;
        }

        .register-button{
            border-radius: 6px;
            font-size: 16px;
            background-color: white;
            transition-duration: 0.4s;
            padding: 10px 20px;
            text-align: center;
        }

        .register-button:hover{
            background-color: blueviolet;
            box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24), 0 17px 50px 0 rgba(0,0,0,0.19);
        }

        .buttons{
            display: flex;
            justify-content: space-between;
            margin: 20px 50px;
        }

        .custom-table {
            width: 100%;
            border-collapse: collapse;
        }

        .custom-table th,
        .custom-table td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
        }

        .custom-table th {
            background-color: #f2f2f2;
            color: black;
            text-transform: uppercase;
        }

        .custom-table tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .custom-table tr:hover {
            background-color: #ddd;
        }

        /* Styles for the paginator */
        .ui-paginator {
            margin-top: 10px;
        }

        .ui-paginator .ui-paginator-current {
            font-weight: bold;
        }

        .ui-paginator .ui-paginator-pages .ui-paginator-page,
        .ui-paginator .ui-paginator-first,
        .ui-paginator .ui-paginator-last,
        .ui-paginator .ui-paginator-next,
        .ui-paginator .ui-paginator-prev {
            padding: 6px 12px;
            margin: 0 2px;
            border: 1px solid #ddd;
            background-color: #f2f2f2;
            color: black;
            cursor: pointer;
            text-decoration: none;
        }

        .ui-paginator .ui-paginator-pages .ui-paginator-page.ui-state-active,
        .ui-paginator .ui-paginator-first.ui-state-disabled,
        .ui-paginator .ui-paginator-last.ui-state-disabled,
        .ui-paginator .ui-paginator-next.ui-state-disabled,
        .ui-paginator .ui-paginator-prev.ui-state-disabled {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
            cursor: default;
        }

        .ui-paginator .ui-paginator-pages .ui-paginator-page.ui-state-hover,
        .ui-paginator .ui-paginator-first.ui-state-hover,
        .ui-paginator .ui-paginator-last.ui-state-hover,
        .ui-paginator .ui-paginator-next.ui-state-hover,
        .ui-paginator .ui-paginator-prev.ui-state-hover {
            background-color: #0056b3;
            color: white;
            border-color: #0056b3;
        }

        .search-box {
            width: 800px;
            padding: 10px;
            border-radius: 20px;
            border: 1px solid #ccc;
            font-size: 16px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .search-button {
            width: 400px;
            padding: 10px 20px;
            border-radius: 20px;
            background-color: white;
            font-size: 16px;
            cursor: pointer;
            margin-left: 10px;
        }

        .search-button:hover {
            background-color: blueviolet;
        }

    </style>
    <script type="text/javascript">
        function handleSaveCompleteUpdate(xhr, status, args) {
            if (!args.validationFailed) {
                PF('updateUserDialog').hide();
            }
        }
        function handleSaveCompleteDependant(xhr, status, args) {
            if (!args.validationFailed) {
                PF('addDependantDialog').hide();
            }
        }
    </script>

</h:head>
<h:body>
    <div class="header">
        <h1>User Registration System</h1>
    </div>

    <div class="search">
        <h:form id="searchForm">
            <h:outputLabel for="searchInput">Search by Username, First Name, or Last Name:</h:outputLabel>
            <br/>
            <br/>
            <h:inputText id="searchInput" value="#{userBean.searchQuery}" styleClass="search-box"/>
            <br/>
            <br/>
            <h:commandButton value="Search" action="#{userBean.searchUser}" styleClass="search-button"/>
        </h:form>
    </div>

    <div class="container">
        <h2>User Management</h2>

        <h:panelGroup id="userTablePanel">
            <p:dataTable id="userTable"
                         value="#{userBean.users}"
                         var="user"
                         border="1"
                         cellpadding="2"
                         cellspacing="0"
                         style="width:100%; border-collapse:collapse;"
                         styleClass="custom-table"
                         rows="10"
                         paginator="true"
                         paginatorPosition="both"
                         paginatorTemplate="{CurrentPageReport} {FirstPageLink} {PreviousPageLink} {PageLinks} {NextPageLink} {LastPageLink} {RowsPerPageDropdown}"
                         currentPageReportTemplate="{startRecord}-{endRecord} of {totalRecords} records"
                         rowsPerPageTemplate="5,10,{ShowAll|'All'}">

                <p:column headerText="Username">
                    <h:outputText value="#{user.username}"/>
                </p:column>

                <p:column headerText="First Name">
                    <h:outputText value="#{user.firstname}"/>
                </p:column>

                <p:column headerText="Last Name">
                    <h:outputText value="#{user.lastname}"/>
                </p:column>

                <p:column headerText="Date of Birth">
                    <h:outputText value="#{user.dateOfBirth}">
                        <f:convertDateTime pattern="dd-MM-yyyy" timeZone="Africa/Kampala"/>
                    </h:outputText>
                </p:column>

                <p:column headerText="Dependents">
                    <h:form>
                        <h:link value="View"
                                outcome="/pages/dependants/view_dependants.xhtml?id=#{user.id}">
                        </h:link>
                        <br/>
                        <p:commandButton value="Add"
                                         actionListener="#{dependantBean.selectUser(user)}"
                                         update=":addDependantForm"
                                         oncomplete="PF('addDependantDialog').show()"
                                         styleClass="register-button">
                        </p:commandButton>
                    </h:form>
                </p:column>

                <p:column headerText="Actions">
                    <h:form>
                        <p:commandButton value="Update"
                                         actionListener="#{userBean.selectUser(user)}"
                                         update=":updateForm :userTablePanel"
                                         oncomplete="PF('updateUserDialog').show()"
                                         styleClass="register-button">
                        </p:commandButton>
                        <br/>
                        <p:commandButton value="Delete"
                                         update=":userTablePanel"
                                         actionListener="#{userBean.confirmDelete(user)}"
                                         styleClass="register-button">
                            <p:confirm header="Confirmation" message="Are you sure you want to delete this user?"
                                       icon="pi pi-exclamation-triangle" />
                        </p:commandButton>
                    </h:form>
                </p:column>
            </p:dataTable>
            <br/>
            <h:form id="deleteAllForm" rendered="#{not empty userBean.users}">
                <p:commandButton value="Delete All Users"
                                 actionListener="#{userBean.confirmDeleteAll}"
                                 update=":userTablePanel"
                                 styleClass="register-button">
                    <p:confirm header="Confirmation"
                               message="Are you absolutely sure you want to delete ALL users? This action cannot be undone!"
                               icon="pi pi-exclamation-triangle" />
                </p:commandButton>
            </h:form>

            <f:facet name="paginatorTopLeft">
                <p:commandButton type="button" icon="pi pi-refresh" update="userTablePanel"/>
            </f:facet>
        </h:panelGroup>
    </div>

    <h:form>
        <div class="buttons">
            <h:commandButton value="Back" onclick="history.back()" type="button" styleClass="register-button" />
            <h:commandButton value="Menu" action="/pages/index/index.xhtml" styleClass="register-button" />
        </div>
    </h:form>

    <h:form id="updateForm">
            <p:dialog header="Update User: #{userBean.selectedUser.username}"
                      widgetVar="updateUserDialog"
                      modal="true"
                      resizable="false"
                      showEffect="fade"
                      hideEffect="fade"
                      closable="true"
                      visible="#{facesContext.validationFailed}"
                      >

                <p:outputPanel id="updatePanel" rendered="#{not empty userBean.selectedUser}">
                    <p:panelGrid columns="1" cellpadding="5">
                        <p:outputLabel for="firstname">First Name:</p:outputLabel>
                        <p:inputText id="firstname" value="#{userBean.selectedUser.firstname}" required="true">
                            <f:validateRegex pattern="[a-zA-Z]*" />
                            <f:validateLength minimum="3" maximum="32" />
                        </p:inputText>
                        <h:message for="firstname" styleClass="error" />

                        <p:outputLabel for="lastname">Last Name:</p:outputLabel>
                        <p:inputText id="lastname" value="#{userBean.selectedUser.lastname}" required="true">
                            <f:validateRegex pattern="[a-zA-Z]*" />
                            <f:validateLength minimum="3" maximum="32" />
                        </p:inputText>
                        <h:message for="lastname" styleClass="error" />

                        <p:outputLabel for="dateOfBirth">Date of Birth:</p:outputLabel>
                        <p:datePicker id="dateOfBirth" value="#{userBean.selectedUser.dateOfBirth}"
                                      pattern="dd-MM-yyyy"
                                      showOnFocus="true"
                                      showTime="false" timeInput="false"
                                      maxdate="#{calendarBean.currentDate}"/>
                        <p:message for="dateOfBirth" styleClass="error" />
                    </p:panelGrid>
                    <br/>
                    <p:commandButton value="Save" update=":searchForm :updateForm:updatePanel :userTablePanel" actionListener="#{userBean.updateUser}" oncomplete="handleSaveCompleteUpdate(xhr, status, args)" styleClass="register-button"/>
                    <p:commandButton value="Cancel" onclick="PF('updateUserDialog').hide();" styleClass="register-button" />
                </p:outputPanel>
            </p:dialog>
        </h:form>

    <h:form id="addDependantForm">
            <p:dialog header="Add Dependant for: #{dependantBean.selectedUser.username}"
                      widgetVar="addDependantDialog"
                      modal="true"
                      resizable="false"
                      showEffect="fade"
                      hideEffect="fade"
                      closable="true"
                      responsive="true"
                      visible="#{facesContext.validationFailed}"
            >

            <p:outputPanel id="addDependantPanel" rendered="#{not empty dependantBean.selectedUser}">
            <p:panelGrid columns="1" cellpadding="5">
                    <p:outputLabel for="dependantUsername">Username: </p:outputLabel>
                    <p:inputText id="dependantUsername" value="#{dependantBean.dependant.username}" required="true">
                        <f:validateRegex pattern="[a-zA-Z0-9_]*" />
                        <f:validateLength minimum="3" maximum="16" />
                    </p:inputText>
                    <p:message for="dependantUsername" styleClass="error" />

                    <p:outputLabel for="dependantFirstname">First Name: </p:outputLabel>
                    <p:inputText id="dependantFirstname" value="#{dependantBean.dependant.firstname}" required="true">
                        <f:validateRegex pattern="[a-zA-Z]*" />
                        <f:validateLength maximum="32" />
                    </p:inputText>
                    <p:message for="dependantFirstname" styleClass="error" />

                    <p:outputLabel for="dependantLastname">Last Name: </p:outputLabel>
                    <p:inputText id="dependantLastname" value="#{dependantBean.dependant.lastname}" required="true">
                        <f:validateRegex pattern="[a-zA-Z]*" />
                        <f:validateLength maximum="32" />
                    </p:inputText>
                    <p:message for="dependantLastname" styleClass="error" />

                    <p:outputLabel for="dependantDateOfBirth">Date of Birth:</p:outputLabel>
                    <p:datePicker id="dependantDateOfBirth" value="#{dependantBean.dependant.dateOfBirth}"
                                  pattern="dd-MM-yyyy"
                                  showOnFocus="true"
                                  showTime="false" timeInput="false"
                                  maxdate="#{calendarBean.currentDate}"/>
                    <p:message for="dependantDateOfBirth" styleClass="error" />

                <h:outputLabel for="dependantGender">Gender: </h:outputLabel>
                <p:selectOneMenu id="dependantGender" value="#{dependantBean.dependant.gender}" required="true">
                    <f:selectItems value="#{dependantBean.genderValues}" var="gender" itemLabel="#{gender}" itemValue="#{gender}"/>
                </p:selectOneMenu>
                <h:message for="dependantGender" styleClass="error"/>
            </p:panelGrid>
            <br/>
                <p:commandButton value="Save" update=":searchForm :addDependantForm:addDependantPanel :userTablePanel" actionListener="#{dependantBean.addDependant}" oncomplete="handleSaveCompleteDependant(xhr, status, args)" styleClass="register-button"/>
                <p:commandButton value="Cancel" onclick="PF('addDependantDialog').hide();" styleClass="register-button" />
            </p:outputPanel>
            </p:dialog>
        </h:form>

    <p:confirmDialog global="true" showEffect="fade" hideEffect="fade">
            <p:button value="Yes" type="button" styleClass="ui-confirmdialog-yes" icon="pi pi-check" />
            <p:button value="No" type="button" styleClass="ui-confirmdialog-no" icon="pi pi-times" />
        </p:confirmDialog>
</h:body>
</html>